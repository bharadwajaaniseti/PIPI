{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\r\n\r\nexport const Kpi = defineDocumentType(() => ({\r\n  name: 'Kpi',\r\n  filePathPattern: `**/*.mdx`,\r\n  fields: {\r\n    label: { type: 'string', required: true },\r\n    value: { type: 'string', required: true }\r\n  }\r\n}))\r\n\r\nexport const CaseStudy = defineDocumentType(() => ({\r\n  name: 'CaseStudy',\r\n  filePathPattern: `case-studies/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    summary: { type: 'string', required: true },\r\n    sector: { type: 'enum', options: ['pharma', 'beauty', 'fmcg', 'other'], required: true },\r\n    cover: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n    kpis: { \r\n      type: 'list',\r\n      of: Kpi\r\n    }\r\n  },\r\n  computedFields: {\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (doc) => doc._raw.flattenedPath.replace('case-studies/', ''),\r\n    },\r\n  },\r\n}))\r\n\r\nexport const News = defineDocumentType(() => ({\r\n  name: 'News',\r\n  filePathPattern: `news/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    summary: { type: 'string', required: true },\r\n    category: { type: 'enum', options: ['pharma', 'decorative', 'tech', 'events'], required: true },\r\n    cover: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n  },\r\n  computedFields: {\r\n    slug: {\r\n      type: 'string',\r\n      resolve: (doc) => doc._raw.flattenedPath.replace('news/', ''),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'content',\r\n  documentTypes: [Kpi, CaseStudy, News],\r\n})"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AACF,EAAE;AAEK,IAAM,YAAY,mBAAmB,OAAO;AAAA,EACjD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,QAAQ,EAAE,MAAM,QAAQ,SAAS,CAAC,UAAU,UAAU,QAAQ,OAAO,GAAG,UAAU,KAAK;AAAA,IACvF,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI;AAAA,IACN;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,iBAAiB,EAAE;AAAA,IACtE;AAAA,EACF;AACF,EAAE;AAEK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,SAAS,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC1C,UAAU,EAAE,MAAM,QAAQ,SAAS,CAAC,UAAU,cAAc,QAAQ,QAAQ,GAAG,UAAU,KAAK;AAAA,IAC9F,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,EACvC;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,QAAQ,SAAS,EAAE;AAAA,IAC9D;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,KAAK,WAAW,IAAI;AACtC,CAAC;",
  "names": []
}
